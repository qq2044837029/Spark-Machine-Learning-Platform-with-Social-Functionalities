"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '2gf*uiol7rf5j1fpc%auz)oi4765rj)y8w@334s#bbp+f_ob1-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'account.apps.AccountConfig',#account app must be preceding to contrib.admin, otherwise, user login/logout page will be overriden by default pages in contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'haystack',
    'article.apps.ArticleConfig',
    'images.apps.ImagesConfig',
    'mlmodels.apps.MlmodelsConfig',
    'taggit',
    'sorl.thumbnail',#used to display thumnail of image, need to download package at first
    # 'social_django' , # this app package helps us to allow users to login using their social services, after adding this,
                    # remember to migrate to update project, more can see  https://python-social-auth.readthedocs.io/en/latest/backends/index.html#supported-backends.
    'crispy_forms',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'engr597',
        'USER': 'root',
        'PASSWORD': 'whq12345',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# Email server settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
EMAIL_USE_TLS=True
EMAIL_HOST='smtp.163.com'
EMAIL_PORT='25'
EMAIL_HOST_USER='wuhaoqiu360@163.com'
EMAIL_HOST_PASSWORD='whq123456'
DEFAULT_FROM_EMAIL ='wuhaoqiu360@163.com'



# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# install search engines whooth, https://django-haystack.readthedocs.io/en/master/tutorial.html
import os
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
STATIC_URL = '/static/'

# setting for auth
LOGIN_REDIRECT_URL = 'main_page' #this tell django wihich url to redirect when successfully login if not 'next variable' is offered
LOGIN_URL = 'login'#the URL to redirect the user to login, especially for cases using login_required decorator
LOGOUT_URL = 'main_page'
LOGOUT_REDIRECT_URL='main_page'

# print the BASE_DIR
# print ("base dir path", BASE_DIR)

# settings for image upload, setting store path for uploadted photos
MEDIA_URL='/media/'
MEDIA_ROOT=os.path.join(BASE_DIR,'media/')

# add extra authentication sources,允许用户用email登录
# allow user using facebook account to login
AUTHENTICATION_BACKENDS=['django.contrib.auth.backends.ModelBackend',
                         'account.authentication.EmailAuthBackend',]
                         # 'social_core.backends.facebook.FacebookOAuth2'
# right now still cannot login with facebook, probably in the future, when this website is using https, this function will be enabled
# SOCIAL_AUTH_FACEBOOK_KEY='1306085002879552'
# SOCIAL_AUTH_FACEBOOK_SECRET='446cd3c00c83b4b0f5d64ce1819ecf76'
# SOCIAL_AUTH_FACEBOOK_SCOPE='email'

# add allowed host,before setting this ,you need to modify /etc/hosts file in your system, and add mysite.com 127.0.0.1 to that file
ALLOWED_HOSTS=['mysite.com','localhost','127.0.0.1','38a1dc54.ngrok.io']

# open thumnail debug function
THUMNAIL_DEBUG=True

# instead of directly defining get_absolute_url in model, this is an alternative method, useful for built_in models
# this method returns corresponding URL for the given model specified in the setting, using parameter u.username
from django.urls import reverse_lazy
ABSOLUTE_URL_OVERRIDES = {
    'auth.user': lambda u: reverse_lazy('user_detail',args=[u.username])
}


# intergrate redis into project,more can see  https://redis-py.readthedocs.io/
# in redis, database is represented by integer index instead of name, so here by default, we use No.0 DB
REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0